DROP DATABASE IF EXISTS TPI1;
CREATE DATABASE IF NOT EXISTS TPI1;
USE TPI1;

CREATE TABLE ZONAS
(
    ID          INT AUTO_INCREMENT PRIMARY KEY,
    DESCRIPCION VARCHAR(30),
    HORARIO     INT
);

CREATE TABLE RESTAURANTES
(
    ID      INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE  VARCHAR(20),
    ID_ZONA INT,
    CONSTRAINT FOREIGN KEY (ID_ZONA) REFERENCES ZONAS (ID)
);
CREATE TABLE TIPOS_DOCUMENTOS
(
    ID      BIGINT PRIMARY KEY AUTO_INCREMENT,
    DETALLE VARCHAR(30)
);

CREATE TABLE PRODUCTOS
(
    ID_PRODUCTO INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE      VARCHAR(30),
    PRECIO      VARCHAR(15),
    DESCRIPCION VARCHAR(200)
);


CREATE TABLE USUARIOS
(
    ID_USUARIO         INT PRIMARY KEY AUTO_INCREMENT,
    ID_TIPO_DOCUMENTO  BIGINT,
    NOMBRE             VARCHAR(50),
    APELLIDO           VARCHAR(50),
    DIRECCION          VARCHAR(100),
    CORREO_ELECTRONICO VARCHAR(100),
    TELEFONO           VARCHAR(20),
    CONTRASENA         VARCHAR(100),
    CONSTRAINT FOREIGN KEY (ID_TIPO_DOCUMENTO) REFERENCES TIPOS_DOCUMENTOS (ID)
);

CREATE TABLE ESTADOS
(
    ID      INT PRIMARY KEY AUTO_INCREMENT,
    DETALLE VARCHAR(30),
    TIEMPO  VARCHAR(30)
);
CREATE TABLE VEHICULOS
(
    ID     INT PRIMARY KEY AUTO_INCREMENT,
    NOMBRE VARCHAR(20)
);

CREATE TABLE REPARTIDORES
(
    ID_REPARTIDOR INT PRIMARY KEY AUTO_INCREMENT,
    ID_VEHICULO   INT,
    CONSTRAINT FOREIGN KEY (ID_VEHICULO) REFERENCES VEHICULOS (ID),
    NOMBRE        VARCHAR(50),
    APELLIDO      VARCHAR(50),
    TELEFONO      VARCHAR(20),
    DIRECCION     VARCHAR(30)
);

CREATE TABLE PEDIDOS
(
    ID_PEDIDO         INT PRIMARY KEY AUTO_INCREMENT,
    FECHA_CREACION    DATE,
    DIRECCION_ENTREGA VARCHAR(100),
    METODO_PAGO       VARCHAR(50),
    HORA_CREACION     TIME,
    HORA_ENTREGA      TIME,
    ID_USUARIOS       INT,
    ID_ESTADO         INT,
    ID_PRODUCTOS      INT,
    ID_REPARTIDOR     INT,
    CONSTRAINT FOREIGN KEY (ID_USUARIOS) REFERENCES USUARIOS (ID_USUARIO),
    CONSTRAINT FOREIGN KEY (ID_REPARTIDOR) REFERENCES REPARTIDORES (ID_REPARTIDOR),
    CONSTRAINT FOREIGN KEY (ID_ESTADO) REFERENCES ESTADOS (ID),
    CONSTRAINT FOREIGN KEY (ID_PRODUCTOS) REFERENCES PRODUCTOS (ID_PRODUCTO)
);


CREATE TABLE DETALLES_PEDIDOS
(
    ID             INT PRIMARY KEY AUTO_INCREMENT,
    PRECIO         INT,
    CANTIDAD       INT,
    ID_PRODUCTO    INT,
    ID_PEDIDO      INT,
    ID_RESTAURANTE INT,
    CONSTRAINT FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTOS (ID_PRODUCTO),
    CONSTRAINT FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDOS (ID_PEDIDO),
    CONSTRAINT FOREIGN KEY (ID_RESTAURANTE) REFERENCES RESTAURANTES (ID)
);

INSERT INTO ZONAS (DESCRIPCION, HORARIO)
VALUES ('Zona Norte', 8),
       ('Zona Sur', 9),
       ('Zona Este', 10),
       ('Zona Oeste', 11),
       ('Centro', 12);


INSERT INTO RESTAURANTES (NOMBRE, ID_ZONA)
VALUES ('Restaurante Uno', 1),
       ('Restaurante Dos', 2),
       ('Restaurante Tres', 3),
       ('Restaurante Cuatro', 4),
       ('Restaurante Cinco', 5);


INSERT INTO TIPOS_DOCUMENTOS (DETALLE)
VALUES ('Cedula'),
       ('RIF'),
       ('Pasaporte'),
       ('cuil'),
       ('DNI');


INSERT INTO PRODUCTOS (NOMBRE, PRECIO, DESCRIPCION)
VALUES ('Pizza Margarita', '$10.99', 'Pizza con salsa de tomate, queso y albahaca'),
       ('Hamburguesa', '$8.99', 'Hamburguesa con queso, lechuga y tomate'),
       ('Ensalada Cesar', '$7.99', 'Ensalada con lechuga, pollo, queso y aderezo cesar'),
       ('Sushi', '$12.99', 'Sushi con salmón, aguacate y arroz'),
       ('Pollo a la parrilla', '$9.99', 'Pollo con papas y ensalada');

INSERT INTO USUARIOS (ID_TIPO_DOCUMENTO, NOMBRE, APELLIDO, DIRECCION, CORREO_ELECTRONICO, TELEFONO, CONTRASENA)
VALUES (1, 'Juan', 'Perez', 'Av. Libertador, Caracas', 'juanperez@gmail.com', '04241234567', 'abc123'),
       (2, 'Maria', 'Gonzalez', 'Calle Real, Madrid', 'mariagonzalez@yahoo.es', '+34911234567', 'qwerty'),
       (3, 'John', 'Smith', 'Broadway, New York', 'johnsmith@gmail.com', '+14151234567', 'password'),
       (3, 'John', 'Smith', 'Broadway, New York', 'johnsmith@gmail.com', '+14151234567', 'password'),
       (3, 'John', 'Smith', 'Broadway, New York', 'johnsmith@gmail.com', '+14151234567', 'password');

INSERT INTO ESTADOS (DETALLE, TIEMPO) VALUES ('En proceso', '00:30:00');
INSERT INTO ESTADOS (DETALLE, TIEMPO) VALUES ('En camino', '01:00:00');
INSERT INTO ESTADOS (DETALLE, TIEMPO) VALUES ('Entregado', '00:00:00');
INSERT INTO ESTADOS (DETALLE, TIEMPO) VALUES ('Cancelado', '00:00:00');
INSERT INTO ESTADOS (DETALLE, TIEMPO) VALUES ('Reembolsado', '00:00:00');

INSERT INTO VEHICULOS (ID, NOMBRE)
VALUES (1, 'MOTO');
INSERT INTO VEHICULOS (ID, NOMBRE)
VALUES (2, 'BICICLETA');
INSERT INTO VEHICULOS (ID, NOMBRE)
VALUES (3, 'CARRO');
INSERT INTO VEHICULOS (ID, NOMBRE)
VALUES (4, 'SCOOTER');
INSERT INTO VEHICULOS (ID, NOMBRE)
VALUES (5, 'CAMIÓN');

INSERT INTO REPARTIDORES (ID_REPARTIDOR, ID_VEHICULO, NOMBRE, APELLIDO, TELEFONO, DIRECCION)
VALUES (1, 1, 'PEDRO', 'GARCÍA', '1234567890', 'CALLE 1, #123');
INSERT INTO REPARTIDORES (ID_REPARTIDOR, ID_VEHICULO, NOMBRE, APELLIDO, TELEFONO, DIRECCION)
VALUES (2, 2, 'JUAN', 'PÉREZ', '2345678901', 'CALLE 2, #456');
INSERT INTO REPARTIDORES (ID_REPARTIDOR, ID_VEHICULO, NOMBRE, APELLIDO, TELEFONO, DIRECCION)
VALUES (3, 3, 'MARÍA', 'GONZÁLEZ', '3456789012', 'CALLE 3, #789');
INSERT INTO REPARTIDORES (ID_REPARTIDOR, ID_VEHICULO, NOMBRE, APELLIDO, TELEFONO, DIRECCION)
VALUES (4, 4, 'SOFÍA', 'RODRÍGUEZ', '4567890123', 'CALLE 4, #101112');
INSERT INTO REPARTIDORES (ID_REPARTIDOR, ID_VEHICULO, NOMBRE, APELLIDO, TELEFONO, DIRECCION)
VALUES (5, 5, 'CARLOS', 'LÓPEZ', '5678901234', 'CALLE 5, #131415');

INSERT INTO PEDIDOS (FECHA_CREACION, DIRECCION_ENTREGA, METODO_PAGO, HORA_CREACION, HORA_ENTREGA, ID_USUARIOS,
                     ID_ESTADO, ID_PRODUCTOS)
VALUES ('2023-03-29', '123 Main St', 'Credit Card', '12:30:00', '13:30:00', 1, 2, 4);

INSERT INTO PEDIDOS (FECHA_CREACION, DIRECCION_ENTREGA, METODO_PAGO, HORA_CREACION, HORA_ENTREGA, ID_USUARIOS,
                     ID_ESTADO, ID_REPARTIDOR)
VALUES ('2023-03-29', '456 Elm St', 'Cash', '14:00:00', '15:00:00', 2, 1, 3);

INSERT INTO PEDIDOS (FECHA_CREACION, DIRECCION_ENTREGA, METODO_PAGO, HORA_CREACION, HORA_ENTREGA, ID_USUARIOS,
                     ID_ESTADO, ID_PRODUCTOS, ID_REPARTIDOR)
VALUES ('2023-03-29', '789 Oak St', 'Debit Card', '16:00:00', '17:00:00', 1, 3, 5, 4);

INSERT INTO PEDIDOS (FECHA_CREACION, DIRECCION_ENTREGA, METODO_PAGO, HORA_CREACION, HORA_ENTREGA, ID_USUARIOS,
                     ID_ESTADO, ID_PRODUCTOS, ID_REPARTIDOR)
VALUES ('2023-03-29', '1011 Maple St', 'PayPal', '18:00:00', '19:00:00', 1, 4, 1, 1);

INSERT INTO PEDIDOS (FECHA_CREACION, DIRECCION_ENTREGA, METODO_PAGO, HORA_CREACION, HORA_ENTREGA, ID_USUARIOS,
                     ID_ESTADO, ID_PRODUCTOS)
VALUES ('2023-03-29', '1213 Pine St', 'Credit Card', '20:00:00', '21:00:00', 1, 2, 1);


INSERT INTO DETALLES_PEDIDOS (PRECIO, CANTIDAD, ID_PRODUCTO, ID_PEDIDO, ID_RESTAURANTE)
VALUES (10, 2, 3, 1, 4);
INSERT INTO DETALLES_PEDIDOS (PRECIO, CANTIDAD, ID_PRODUCTO, ID_PEDIDO, ID_RESTAURANTE)
VALUES (15, 1, 5, 2, 2);
INSERT INTO DETALLES_PEDIDOS (PRECIO, CANTIDAD, ID_PRODUCTO, ID_PEDIDO, ID_RESTAURANTE)
VALUES (5, 3, 1, 3, 3);
INSERT INTO DETALLES_PEDIDOS (PRECIO, CANTIDAD, ID_PRODUCTO, ID_PEDIDO, ID_RESTAURANTE)
VALUES (7, 1, 2, 4, 1);
INSERT INTO DETALLES_PEDIDOS (PRECIO, CANTIDAD, ID_PRODUCTO, ID_PEDIDO, ID_RESTAURANTE)
VALUES (12, 2, 4, 5, 2);

SELECT Z.DESCRIPCION AS 'ZONA',
       COUNT(*)      AS 'CANTIDAD DE PEDIDOS',
       MAX(P.PRECIO) AS 'VENTA MÁXIMA',
       MIN(P.PRECIO) AS 'VENTA MÍNIMA'
FROM ZONAS Z
         JOIN RESTAURANTES R ON R.ID_ZONA = Z.ID
         JOIN DETALLES_PEDIDOS PP ON PP.ID_PEDIDO = R.ID
         JOIN PRODUCTOS P ON P.ID_PRODUCTO = PP.ID_PRODUCTO
GROUP BY Z.ID
ORDER BY COUNT(*) DESC
LIMIT 10;

SELECT CASE
           WHEN HOUR(HORA_CREACION) >= 0 AND HOUR(HORA_CREACION) < 6 THEN 'NOCHE'
           WHEN HOUR(HORA_CREACION) >= 6 AND HOUR(HORA_CREACION) < 12 THEN 'MAÑANA'
           WHEN HOUR(HORA_CREACION) >= 12 AND HOUR(HORA_CREACION) < 18 THEN 'TARDE'
           ELSE 'NOCHE'
           END                            AS PERIODO_DEL_DIA,
       ROUND(AVG(HOUR(HORA_CREACION)), 0) AS HORA_CON_MAS_PEDIDOS_PROMEDIO
FROM PEDIDOS
WHERE FECHA_CREACION >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH)
GROUP BY PERIODO_DEL_DIA
ORDER BY COUNT(*) DESC
LIMIT 1;


SELECT P.ID_PRODUCTO,
       P.NOMBRE,
       SUM(DP.CANTIDAD) AS CANTIDAD_PEDIDA,
       P.PRECIO         AS PRECIO_ACTUAL
FROM PEDIDOS PE
         JOIN DETALLES_PEDIDOS DP ON PE.ID_PEDIDO = DP.ID_PEDIDO
         JOIN PRODUCTOS P ON DP.ID_PRODUCTO = P.ID_PRODUCTO
WHERE YEARWEEK(PE.FECHA_CREACION) = YEARWEEK(CURRENT_DATE())
GROUP BY P.ID_PRODUCTO
ORDER BY CANTIDAD_PEDIDA DESC;

SELECT COUNT(*)                            AS CANTIDAD_PEDIDOS,
       SUM(DP.PRECIO * DP.CANTIDAD)        AS MONTO_TOTAL,
       SUM(DP.PRECIO * DP.CANTIDAD) * 0.01 AS COSTO_ENVIO
FROM PEDIDOS P
         INNER JOIN DETALLES_PEDIDOS DP ON P.ID_PEDIDO = DP.ID_PEDIDO
         INNER JOIN RESTAURANTES R ON DP.ID_RESTAURANTE = R.ID
WHERE R.ID = DP.ID_RESTAURANTE;


SELECT VEHICULOS.NOMBRE                                                        AS MEDIO_TRANSPORTE,
       COUNT(PEDIDOS.ID_PEDIDO)                                                AS CANTIDAD_PEDIDOS,
       AVG(TIME_TO_SEC(TIMEDIFF(PEDIDOS.HORA_ENTREGA, PEDIDOS.HORA_CREACION))) AS TIEMPO_PROMEDIO_ENTREGA
FROM PEDIDOS
         INNER JOIN REPARTIDORES ON PEDIDOS.ID_REPARTIDOR = REPARTIDORES.ID_REPARTIDOR
         INNER JOIN VEHICULOS ON REPARTIDORES.ID_VEHICULO = VEHICULOS.ID
GROUP BY VEHICULOS.NOMBRE;
